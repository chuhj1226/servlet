/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.71
 * Generated at: 2021-10-23 19:51:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class memberJoinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/NoteBook/Documents/GitHub/servlet/workspace/JSPproject/webapp/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1635018121185L));
    _jspx_dependants.put("/WEB-INF/views/common/menubar.jsp", Long.valueOf(1635018121191L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<style>\r\n");
      out.write("	.outer{\r\n");
      out.write("		width:45%;\r\n");
      out.write("		min-width : 650px;\r\n");
      out.write("		border: 1px solid lightgray;\r\n");
      out.write("    	border-radius: 10px;\r\n");
      out.write("		margin: 70px auto;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#joinForm {\r\n");
      out.write("		width : 400px;\r\n");
      out.write("		margin: auto;\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#joinForm h1 {\r\n");
      out.write("		text-align:center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	.input_area {\r\n");
      out.write("	    border: solid 1px #dadada;\r\n");
      out.write("	    padding : 10px 10px 14px 10px;\r\n");
      out.write("	    background : white;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.input_area input:focus {\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.input_area input:not([type=checkbox]) {\r\n");
      out.write("		width : 250px;\r\n");
      out.write("		height : 30px;\r\n");
      out.write("		border: 0px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.btnArea {\r\n");
      out.write("		text-align:center;\r\n");
      out.write("		padding : 50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	button {\r\n");
      out.write("		width : 100px;\r\n");
      out.write("		height : 35px;\r\n");
      out.write("		border : 0px;\r\n");
      out.write("		color:white;\r\n");
      out.write("		background:#282A35;\r\n");
      out.write("		margin : 5px;\r\n");
      out.write("		cursor : pointer;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");

	// session 객체에 담긴 loginUser 정보를 변수에 담아두기
	Member loginUser = (Member)session.getAttribute("loginUser");


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>menubar</title>\r\n");
      out.write("<!-- 구글웹폰트 -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- 외부 스타일 시트 -->\r\n");
      out.write("<link href=\"");
      out.print( request.getContextPath() );
      out.write("/resources/css/menubar-style.css\" rel=\"stylesheet\">\r\n");
      out.write('\r');
      out.write('\n');
 if(session.getAttribute("message")!= null) { 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	alert('");
      out.print( session.getAttribute("message") );
      out.write("');\r\n");
      out.write("</script>\r\n");
 session.removeAttribute("message");
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("	<header id=\"header\">\r\n");
      out.write("		<!-- 로고 이미지를 클릭하면 첫 화면으로 -->\r\n");
      out.write("		<a href=\"");
      out.print( request.getContextPath() );
      out.write("\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("			<img class=\"logo\" src=\"");
      out.print( request.getContextPath() );
      out.write("/resources/images/logo.jpg\">\r\n");
      out.write("		</a>\r\n");
      out.write("		<div class=\"btnArea\">\r\n");
      out.write("			");
 if(loginUser == null) { 
      out.write("\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/memberJoin\">회원가입</a>\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/login\">로그인</a>\r\n");
      out.write("			");
 } else { 
      out.write("\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/memberModify\">정보수정</a>|\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/logout\">로그아웃</a>\r\n");
      out.write("			");
 } 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	<nav id=\"nav\">\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"");
      out.print( request.getContextPath() );
      out.write("\">HOME</a></li>\r\n");
      out.write("			<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/notice/list\">공지사항</a></li>\r\n");
      out.write("			<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/list\">게시판</a></li>\r\n");
      out.write("			<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/gallery/list\">사진게시판</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"outer\">\r\n");
      out.write("		<div id=\"joinInfoArea\">\r\n");
      out.write("			<form id=\"joinForm\" action=\"");
      out.print( request.getContextPath() );
      out.write("/memberJoin\"\r\n");
      out.write("			method=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("				<h1>회원 가입</h1>\r\n");
      out.write("				\r\n");
      out.write("				<h4>* 아이디</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"text\" maxlength=\"13\" name=\"userId\" required></span>\r\n");
      out.write("				<button id=\"idCheck\" type=\"button\">중복확인</button>\r\n");
      out.write("				\r\n");
      out.write("				<h4>* 비밀번호</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"password\" maxlength=\"15\" name=\"userPwd\" required></span>\r\n");
      out.write("				\r\n");
      out.write("				<h4>* 비밀번호 확인</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"password\" maxlength=\"15\" name=\"userPwd2\" required></span>\r\n");
      out.write("				<label id=\"pwdResult\"></label>\r\n");
      out.write("				\r\n");
      out.write("				<h4>* 이름</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"text\" maxlength=\"5\" name=\"userName\" required></span>\r\n");
      out.write("				\r\n");
      out.write("				<h4>연락처</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"tel\" maxlength=\"11\" name=\"phone\"\r\n");
      out.write("										placeholder=\"(-없이)01012345678\"></span>\r\n");
      out.write("										\r\n");
      out.write("				<h4>이메일</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"email\" name=\"email\"></span>\r\n");
      out.write("				\r\n");
      out.write("				<h4>우편번호</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"text\" name=\"address\" class=\"postcodify_postcode5\" readonly></span>\r\n");
      out.write("				<button type=\"button\" id=\"postcodify_search_button\">검색</button>\r\n");
      out.write("				<h4>도로명주소</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"text\" name=\"address\" class=\"postcodify_address\" readonly></span>\r\n");
      out.write("				<h4>상세주소</h4>\r\n");
      out.write("				<span class=\"input_area\"><input type=\"text\" name=\"address\" class=\"postcodify_details\"></span>\r\n");
      out.write("				\r\n");
      out.write("				<h4>관심분야</h4>\r\n");
      out.write("				<span class=\"input_area\">\r\n");
      out.write("					<input type=\"checkbox\" id=\"sports\" name=\"interest\" value=\"운동\">\r\n");
      out.write("					<label for=\"sports\">운동</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"climbing\" name=\"interest\" value=\"등산\">\r\n");
      out.write("					<label for=\"climbing\">등산</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"fishing\" name=\"interest\" value=\"낚시\">\r\n");
      out.write("					<label for=\"fishing\">낚시</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"cooking\" name=\"interest\" value=\"요리\">\r\n");
      out.write("					<label for=\"cooking\">요리</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"game\" name=\"interest\" value=\"게임\">\r\n");
      out.write("					<label for=\"game\">게임</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"etc\" name=\"interest\" value=\"기타\">\r\n");
      out.write("					<label for=\"etc\">기타</label>\r\n");
      out.write("				</span>\r\n");
      out.write("				<div class=\"btnArea\">\r\n");
      out.write("					<button id=\"joinBtn\">가입하기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- jQuery와 Postcodify를 로딩한다 -->\r\n");
      out.write("	<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\"></script>\r\n");
      out.write("	<script src=\"//d1p7wdleee1q2z.cloudfront.net/post/search.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<!-- \"검색\" 단추를 누르면 팝업 레이어가 열리도록 설정한다 -->\r\n");
      out.write("	<script> $(function() { $(\"#postcodify_search_button\").postcodifyPopUp(); }); </script>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		// 사용자 입력 값 유효성 검사용 함수\r\n");
      out.write("		function validate() {\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/common/menubar.jsp(31,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/common/menubar.jsp(31,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/menubar.jsp(31,0) '${ pageContext.servletContext.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ pageContext.servletContext.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/common/menubar.jsp(31,0) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setScope("application");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
