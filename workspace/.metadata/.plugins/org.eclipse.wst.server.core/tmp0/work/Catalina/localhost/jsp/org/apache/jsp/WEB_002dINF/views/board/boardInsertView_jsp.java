/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.71
 * Generated at: 2021-10-23 19:49:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardInsertView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시글 작성</title>\r\n");
      out.write("<style>\r\n");
      out.write(".outer {\r\n");
      out.write("	width: 800px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wrap {\r\n");
      out.write("	width: 780px;\r\n");
      out.write("	margin: 100px auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board_title {\r\n");
      out.write("	border-bottom: 1px solid #282A35;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board_content {\r\n");
      out.write("	padding: 0px 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board_content .content {\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input_area {\r\n");
      out.write("	border: solid 1px #dadada;\r\n");
      out.write("	padding: 10px 10px 14px 10px;\r\n");
      out.write("	background: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".input_area select {\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	border: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".input_area input {\r\n");
      out.write("	width: 700px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	border: 0px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input_area input:focus,\r\n");
      out.write(".input_area select:focus {\r\n");
      out.write("	outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".textarea {\r\n");
      out.write("	resize: none;\r\n");
      out.write("	border: solid 1px #dadada;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".textarea:focus {\r\n");
      out.write("	outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title_span {\r\n");
      out.write("	background-color: #282A35;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board_area button {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 35px;\r\n");
      out.write("	border: 0px;\r\n");
      out.write("	color: white;\r\n");
      out.write("	background: #282A35;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("	cursor : pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn_area {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	border-top: 1px solid #282A35;\r\n");
      out.write("	padding: 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"outer\">\r\n");
      out.write("		<div class=\"wrap\">\r\n");
      out.write("			<div class=\"board_area\">\r\n");
      out.write("				<div class=\"board_title\">\r\n");
      out.write("					<h1>게시글 작성</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"board_content\">\r\n");
      out.write("					<form method=\"post\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/insert\">\r\n");
      out.write("						<div class=\"content\">\r\n");
      out.write("							<h4>\r\n");
      out.write("								<span class=\"title_span\">&nbsp;</span> 분류\r\n");
      out.write("							</h4>\r\n");
      out.write("							<span class=\"input_area\"> \r\n");
      out.write("							<select name=\"category\">\r\n");
      out.write("								<option value=\"10\">공통</option>\r\n");
      out.write("								<option value=\"20\">운동</option>\r\n");
      out.write("								<option value=\"30\">등산</option>\r\n");
      out.write("								<option value=\"40\">게임</option>\r\n");
      out.write("								<option value=\"50\">낚시</option>\r\n");
      out.write("								<option value=\"60\">요리</option>\r\n");
      out.write("								<option value=\"70\">기타</option>\r\n");
      out.write("							</select>\r\n");
      out.write("							</span>\r\n");
      out.write("							<h4>\r\n");
      out.write("								<span class=\"title_span\">&nbsp;</span> 제목\r\n");
      out.write("							</h4>\r\n");
      out.write("							<span class=\"input_area\"> <input type=\"text\" name=\"title\"\r\n");
      out.write("								required>\r\n");
      out.write("							</span>\r\n");
      out.write("\r\n");
      out.write("							<h4>\r\n");
      out.write("								<span class=\"title_span\">&nbsp;</span> 내용\r\n");
      out.write("							</h4>\r\n");
      out.write("							<textarea class=\"textarea\" rows=\"20\" cols=\"100\" name=\"content\"\r\n");
      out.write("								required></textarea>\r\n");
      out.write("							<input type=\"hidden\" name=\"type\" value=\"1\">	\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"btn_area\">\r\n");
      out.write("							<button type=\"button\">목록으로</button>\r\n");
      out.write("							<button type=\"submit\">작성하기</button>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
