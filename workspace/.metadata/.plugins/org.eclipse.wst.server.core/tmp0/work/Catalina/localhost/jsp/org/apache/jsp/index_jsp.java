/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.71
 * Generated at: 2021-10-08 10:15:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/common/menubar.jsp", Long.valueOf(1633687531259L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>JSPProject</title>\r\n");
      out.write("<style>\r\n");
      out.write("	#imageArea {\r\n");
      out.write("		width : 800px;\r\n");
      out.write("		margin : 100px auto;\r\n");
      out.write("		display : flex;\r\n");
      out.write("		justify-content : center;\r\n");
      out.write("		align-items : center;\r\n");
      out.write("		height : 70vh;\r\n");
      out.write("	\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<!-- \r\n");
      out.write("		* 회원\r\n");
      out.write("		- 로그인/로그아웃\r\n");
      out.write("		- 회원 가입/회원 정보 수정/회원 탈퇴\r\n");
      out.write("		\r\n");
      out.write("		* 공지사항/게시판\r\n");
      out.write("		- 게시글 조회\r\n");
      out.write("		- 게시글 작성/게시글 수정/게시글 삭제\r\n");
      out.write("		- 페이징/검색(필터)\r\n");
      out.write("	\r\n");
      out.write("		* 사진 게시판\r\n");
      out.write("		- 파일 업로드/다운로드\r\n");
      out.write("		\r\n");
      out.write("		* AJAX(비동기 통신)\r\n");
      out.write("		- 아이디 중복 여부 확인\r\n");
      out.write("		- 댓글\r\n");
      out.write("	 -->\r\n");
      out.write("\r\n");
      out.write("   <!-- 모든 페이지에 include할 menubar.jsp 생성 -->\r\n");
      out.write("   ");
      out.write('\r');
      out.write('\n');

	// session 객체에 담긴 loginUser 정보를 변수에 담아두기
	Member loginUser = (Member)session.getAttribute("loginUser");


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>menubar</title>\r\n");
      out.write("<!-- 구글웹폰트 -->\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- 외부 스타일 시트 -->\r\n");
      out.write("<link href=\"");
      out.print( request.getContextPath() );
      out.write("/resources/css/menubar-style.css\" rel=\"stylesheet\">\r\n");
      out.write('\r');
      out.write('\n');
 if(session.getAttribute("message")!= null) { 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	alert('");
      out.print( session.getAttribute("message") );
      out.write("');\r\n");
      out.write("</script>\r\n");
 session.removeAttribute("message");
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("	<header id=\"header\">\r\n");
      out.write("		<!-- 로고 이미지를 클릭하면 첫 화면으로 -->\r\n");
      out.write("		<a href=\"");
      out.print( request.getContextPath() );
      out.write("\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("			<img class=\"logo\" src=\"");
      out.print( request.getContextPath() );
      out.write("/resources/images/logo.jpg\">\r\n");
      out.write("		</a>\r\n");
      out.write("		<div class=\"btnArea\">\r\n");
      out.write("			");
 if(loginUser == null) { 
      out.write("\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/memberJoin\">회원가입</a>\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/login\">로그인</a>\r\n");
      out.write("			");
 } else { 
      out.write("\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/memberModify\">정보수정</a>|\r\n");
      out.write("			<a href=\"");
      out.print( request.getContextPath());
      out.write("/logout\">로그아웃</a>\r\n");
      out.write("			");
 } 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("	<nav id=\"nav\">\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"");
      out.print( request.getContextPath() );
      out.write("\">HOME</a></li>\r\n");
      out.write("			<li><a href=\"#\">공지사항</a></li>\r\n");
      out.write("			<li><a href=\"#\">게시판</a></li>\r\n");
      out.write("			<li><a href=\"#\">사진게시판</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("   <!-- web-inf안에 넣는지 안 넣는지 차이는 사용자가 접근 가능하냐 못하냐의 차이 -->\r\n");
      out.write("   \r\n");
      out.write("   <div id=\"imageArea\">\r\n");
      out.write("      <img id=\"servletJSP\" src=\"");
      out.print( request.getContextPath() );
      out.write("/resources/images/servlet-jsp.png\">\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
